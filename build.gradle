/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
plugins {
    id 'java'
    id 'com.bmuschko.clover' version '2.2.3' // thrid-party Gradle plugin
}

/** extends clover plugin */
clover {
    report{
        xml=true
        html=true
    }
}

/** configures subprojects */
subprojects{
    apply plugin: 'java' // core Gradle plugin
    apply plugin: 'com.bmuschko.clover'

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    clover{
        compiler{
            additionalArgs = "-g:lines,source,vars"
        }
        report{
            xml=true
            html=true
        }
    }

    repositories {
        // jcenter()  // jcenter is deprecated
        mavenCentral()
    }

    dependencies {
        // Use JUnit Jupiter for testing.
        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
        testImplementation 'org.junit.platform:junit-platform-launcher:1.6.2'

        // JUnit Jupiter (JUnit 5) API and Engine
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'


        // Mockito for mocking in tests
        testImplementation 'org.mockito:mockito-core:3.6.0'
        testImplementation 'org.mockito:mockito-junit-jupiter:3.6.0'

        // PowerMock modules for JUnit and Mockito integration
        testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
        testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'

        // Required to avoid conflicts between different versions of byte-buddy (used by Mockito and PowerMock)
        testImplementation 'net.bytebuddy:byte-buddy:1.10.18'
        testImplementation 'net.bytebuddy:byte-buddy-agent:1.10.18'
            // This dependency is used by the application.
            implementation 'com.google.guava:guava:30.1.1-jre'
            clover 'org.openclover:clover:4.4.1'
            // Use Mockito
            implementation 'org.postgresql:postgresql:42.2.23'
            testImplementation "org.mockito:mockito-core:3.+"
    }

    test{
        useJUnitPlatform() // Use junit platform for unit tests
        testLogging{
            showStandardStreams = true
            exceptionFormat = 'full'
        }
    }
}

/** configures projects' dependencies */
project (':shared'){
}
project (':backend'){
    dependencies {
        implementation project(':shared')
    }
}
// project (':frontend'){
//     dependencies {
//         implementation project(':shared')
//     }
// }
project (':admin'){
    dependencies {
        implementation project(':shared')
    }
}

project (':coursemanagement'){
    dependencies {
        implementation project(':shared')
        implementation project(':admin')
    }
}

/** customized taks */
tasks.register("run-backend") {
    // dependsOn project('server').getTasksByName('run',false)
    dependsOn project('backend').getTasksByName('run',false)
    group = 'Run Client/Server'
    description = 'Run the Server'
}
/** customized taks */
tasks.register("run-coursemanagement") {
    // dependsOn project('server').getTasksByName('run',false)
    dependsOn project('coursemanagement').getTasksByName('run',false)
    group = 'Run course management'
    description = 'Run course management'
}

tasks.register("run-frontend") {
    dependsOn project('frontend').getTasksByName('bootRun',false)
    group = 'Run Client/Server'
    description = 'Run the Client'
}
tasks.register("run-admin") {
    dependsOn project('admin').getTasksByName('run',false)
    group = 'Run admin app'
    description = 'Run admin app'
}
tasks.register("build-shared") {
    dependsOn project('shared').getTasksByName('build',false)
    group = 'Run admin app'
    description = 'Run admin app'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}
tasks.register("resolveDependencies") {
    dependsOn project('backend').getTasksByName('resolveDependencies',false)
    dependsOn project('frontend').getTasksByName('resolveDependencies',false)
    dependsOn project('coursemanagement').getTasksByName('resolveDependencies',false)
    dependsOn project('admin').getTasksByName('resolveDependencies',false)
    group = 'Build'
    description = 'Resolve/Download Dependencies'
}
